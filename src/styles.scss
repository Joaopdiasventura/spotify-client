@use './styles/tokens' as *;

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  overflow: hidden;
}

body {
  margin: 0;
  background: $color-bg;
  color: $color-text;
  font-family: $font-sans;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  font: inherit;
  cursor: pointer;
}

.container {
  max-width: $container;
  margin: 0 auto;
  padding: 0 $space-4;
}

// Reusable icon-only button
.icon-btn {
  width: 36px;
  height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 0; // ensure perfect centering of inline SVG
  border-radius: $radius-full;
  color: $color-text;
  background: transparent;
  transition: background-color 150ms ease, color 150ms ease, transform 100ms ease;

  &:hover {
    background: $color-elev;
  }

  &:active {
    transform: translateY(1px);
  }

  lucide-icon {
    width: 18px;
    height: 18px;
  }
}

// Normalize Lucide icon alignment everywhere
lucide-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  line-height: 0;
}

lucide-icon svg {
  display: block;
}

// Scrollbar design (minimal, dark, with primary accent)
@mixin scrollbar($thumb, $track, $thumb-hover, $thumb-active, $size: 10px) {
  scrollbar-width: thin; // Firefox
  scrollbar-color: $thumb $track; // Firefox

  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }
  &::-webkit-scrollbar-track {
    background: $track;
    border-radius: $radius-full;
  }
  &::-webkit-scrollbar-thumb {
    background-color: $thumb;
    border-radius: $radius-full;
    border: 2px solid $track; // creates gap, feels lighter
  }
  &::-webkit-scrollbar-thumb:hover {
    background-color: $thumb-hover;
  }
  &::-webkit-scrollbar-thumb:active {
    background-color: $thumb-active;
  }
  &::-webkit-scrollbar-corner {
    background: transparent;
  }
}

// Apply global scrollbar styling to all scrollable elements
* {
  @include scrollbar($color-primary, $color-elev, $color-primary-600, $color-primary-700, 10px);
}

// Player styles (moved from component to reduce per-component CSS budgets)
$range-color: $color-primary;
$range-bg: #000000;
$range-height: 6px;
$range-border: 1px;
$thumb-size: 14px;

.player {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  background: $color-surface;
  border-top: 1px solid $color-border;
  padding: $space-2 $space-3;
  z-index: 1000;
  display: grid;
  grid-template-columns: 1fr;
  row-gap: $space-2;
}

.row {
  display: flex;
  align-items: center;
  @include gaps($space-2, $space-3);
}
.row.track-info {
  min-width: 0;
}
.row.track-info img {
  width: 56px;
  height: 56px;
  border-radius: $radius-md;
  object-fit: cover;
}
.row.track-info .text {
  min-width: 0;
}
.row.track-info .title {
  margin: 0;
  color: $color-text;
  font-size: $fs-lg;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.row.track-info .artist {
  color: $color-muted;
  font-size: $fs-sm;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.row.progress {
  margin-top: $space-2;
}
.row.progress .time {
  color: $color-muted;
  font-size: $fs-xs;
}
.row.controls {
  justify-content: center;
  gap: $space-2;
}
.row.controls .play-btn {
  @extend .icon-btn;
  width: 40px;
  height: 40px;
  border-radius: $radius-full;
  background: $color-primary;
  color: $color-text;
}
.row.controls .play-btn:hover {
  background: $color-primary-600;
}

.left {
  display: flex;
  align-items: center;
  gap: $space-3;
  min-width: 0;
}
.left img {
  width: 56px;
  height: 56px;
  border-radius: $radius-md;
  object-fit: cover;
}
.left .title {
  margin: 0;
  color: $color-text;
}
.left .artist {
  color: $color-muted;
  font-size: $fs-sm;
}

.center {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: $space-2;
}

.controls-row {
  display: inline-flex;
  align-items: center;
  @include gaps($space-2, $space-3);
}
.controls-row .play-btn.lg {
  @extend .icon-btn;
  width: 44px;
  height: 44px;
  background: $color-primary;
}
.controls-row .play-btn.lg:hover {
  background: $color-primary-600;
}

.progress-row {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: $space-2;
  width: 100%;
}
.progress-row .time {
  color: $color-muted;
  font-size: $fs-xs;
}

.right {
  display: none;
  align-items: center;
  justify-content: flex-end;
  gap: -2;
}
.right lucide-icon {
  width: 16px;
  height: 16px;
  color: $color-muted;
}

// Range styling (scoped to .player)
.player input[type='range'] {
  cursor: pointer;
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: $thumb-size; // ensure thumb fits
  background: transparent;
  border: none;
}
.player input[type='range']::-webkit-slider-runnable-track {
  height: $range-height;
  background: linear-gradient($range-color, $range-color) 0 / var(--progress, 0%) 100% no-repeat,
    $range-bg;
  border-radius: $radius-full;
}
.player input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: $thumb-size;
  height: $thumb-size;
  background: $range-color;
  border-radius: $radius-full;
  margin-top: calc((#{$range-height} - #{$thumb-size}) / 2);
}
.player input[type='range']::-moz-range-track {
  height: $range-height;
  background: $range-bg;
  border-radius: $radius-full;
}
.player input[type='range']::-moz-range-progress {
  height: $range-height;
  background: $range-color;
  border-radius: $radius-full 0 0 $radius-full;
}
.player input[type='range']::-moz-range-thumb {
  width: $thumb-size;
  height: $thumb-size;
  background: $range-color;
  border-radius: $radius-full;
}

@media (min-width: #{-md}) {
  .player {
    grid-template-columns: 1fr 1.2fr 1fr;
    align-items: center;
    column-gap: -4;
  }
  .right {
    display: inline-flex;
  }
}
